@model MealProfiler.Models.Ingredient[]


@{

    ViewBag.Title = "Ingredient Gallery";

}





<!-- Page Content -->
<div class="container">
    <h1 class="my-4 text-center text-lg-left">@ViewBag.Title</h1>
    <div class="row text-center text-lg-left">
        @* lesson learned; when changing variable names, its best to write the code by hand
            if errors persist, because the foreach locaked an earlier name into the variable.  frustrating.  *@
        @foreach (var ingredient in Model)
        {
            // parameters for the Html>ActionLink helper method are (linkTextWe want to see, string literal for the ActionResult Name parameter of the view we want, new {})</h4>
            // this will send us to the Detail.cshtml  View on mouse click.
            <div class="col-lg-3 col-md-4 col-xs-6">
                <h4>
                    @Html.ActionLink(@ingredient.IngredientName, "IngredientDetail", new { id = ingredient.Id })
                </h4>

                @*We will use Razor to set the href attribute value.  the @Url.Action method provides a signature overload for
                    Action Name, routing value.    @Url.Action(ActionName, RoutingValue)
                    Url.ActionLink methods differ and Url.Action methods differ in that the Html.ActionLink method generates
                    a complete <a> element whereas the Url.Action method just generates a URL string. *@

                <a href="@Url.Action("IngredientDetail", new { id = ingredient.Id })" class="d-block mb-4 h-100 text-color">
                    <img src="/Images/@ingredient.IngredientDetailFileName"
                         alt="@ingredient.IngredientName" class="img-fluid img-thumbnail">
                </a>
            </div>

        }    <!-- end foreach -->

    </div> <!-- end div class row -->
</div>  <!-- end div class container -->
