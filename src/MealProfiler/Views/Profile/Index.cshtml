@* add a model binding so that we can pass the mealProfiles list to this page for easy reference. *@

@model MealProfiler.Models.ProfileListViewModel


@* the compiler gave me advice to use 'Component.DataAnnotation, but then wouldn't take it, so I used the one I used for the MealProfile, and I think its working. *@


@using System.ComponentModel.DataAnnotations;
@using MealProfiler.Models;



@{
    ViewBag.Title = "Meal Profiler";  // you can set the ViewBag here without using the at symbol, since all the code is in the at symbol block
                                      //  If you set a ViewBag in the controller, you need to use the at symbol before refeening it.
                                      // if you bind the return value in the controller, yo ucan just reference its properties by using
                                      // and at symbol.Property

    ViewBag.ShowBackBar = true;


}


@if (TempData["Message"] != null)
{
    <div class="alert alert-success alert-dismissible" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        @TempData["Message"]
    </div>
}


@*
    this can be used to display results .  I'll use it again on my ingredient results page.

    ViewBag.MinutesSpentPreparing = minutesSpentPreparing;
    ViewBag.AverageTimeSpentPreparingMeals = (minutesSpentPreparing / (double)numberOfMeals);

*@

<h3>Meal Expense Running Totals</h3>

<table class="table">
    <tr>
        <th>Total Minutes</th>
        <th>Avg Minutes</th>
        <th>Total Cost</th>
        <th class="">Avg Cost</th>
    </tr>
    @* we are working with single MealProfile objects at a time here in the Model of List<MealProfile> objects. *@

    <tr>
        <!-- Meal.Name will return the name of the Meal Goal. -->
        <td>@ViewBag.MinutesSpentPreparing</td>
        <td>@ViewBag.AverageTimeSpentPreparingMeals</td>
        <td>@ViewBag.TotalFoodCost</td>
        <td class="">@ViewBag.AverageCostPerMeal</td>
    </tr>

</table>

<h3>@ViewBag.Title Single Meal Results</h3>
<table class="table table-striped table-dark">

    <thead>
        <tr class="bg-danger">
            <th>Meal Goal</th>
            <th>Cost</th>
            <th>Prep Time</th>
            <th class="">Author</th>
            <th class="">Id</th>
            <th>Actions</th>
            <th>&nbsp;</th>
        </tr>
    </thead>


    @* we are working with single MealProfile objects at a time here in the Model of List<MealProfile> objects. *@
    <tbody>
        @for (var meal = 0; meal < Model.Profiles.Count; meal++)
        {


            <tr>
                <!-- Meal.Name will return the name of the Meal Goal. -->
                <td>@Model.Profiles[meal].MealGoal</td>
                <td>@Model.Profiles[meal].MealCost</td>
                <td>@Model.Profiles[meal].PrepTime</td>
                <td class="">@Model.Profiles[meal].MealAuthor</td>
                <td class="">@Model.Profiles[meal].ProfileId</td>
                <td>@Html.ActionLink("Details", "ProfileDetail", new { id = Model.Profiles[meal].ProfileId })</td>
                <td>
                    <div class="pull-right">
                        <a href="@Url.Action("Edit", new { id = Model.Profiles[meal].ProfileId })" class="btn btn-warning btn-sm margin-right">
                            <span class="glyphicon glyphicon-edit"></span><span class="hidden-xs"> Review</span>
                        </a>
                        <a href="@Url.Action("Delete", new { id = Model.Profiles[meal].ProfileId })" class="btn btn-danger btn-sm">
                            <span class="glyphicon glyphicon-trash"></span><span class="hidden-xs"> Delete</span>
                        </a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>



<div class="col-sm-12 form-group">
    <label>Total Profiles:</label> @Model.TotalProfiles
</div>
<div class="col-sm-12">
    @Html.ActionLink("Add Profile", "ProfileAdd", null, new { @class = "btn btn-primary" })
</div>

