@* add a model binding so that we can pass the mealProfiles list to this page for easy reference. *@

@model MealProfiler.Models.ProfileListViewModel


@* the compiler gave me advice to use 'Component.DataAnnotation, but then wouldn't take it, so I used the one I used for the MealProfile, and I think its working. *@


@using System.ComponentModel.DataAnnotations;
@using MealProfiler.Models;



@{
    ViewBag.Title = "Meal Profiler";  // you can set the ViewBag here without using the at symbol, since all the code is in the at symbol block
                                      //  If you set a ViewBag in the controller, you need to use the at symbol before refeening it.
                                      // if you bind the return value in the controller, yo ucan just reference its properties by using
                                      // and at symbol.Property

    ViewBag.ShowBackBar = true;


}


@if (TempData["Message"] != null)
{
    <div class="alert alert-success alert-dismissible" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        @TempData["Message"]
    </div>
}


@*
    this can be used to display results .  I'll use it again on my ingredient results page.

    ViewBag.MinutesSpentPreparing = minutesSpentPreparing;
    ViewBag.AverageTimeSpentPreparingMeals = (minutesSpentPreparing / (double)numberOfMeals);

*@

    <table class="table table-striped  table-dark">
        <thead>
            <tr>
                <th>Name</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @for (var i = 0; i < Model.Profiles.Count; i++)
            {
                <tr>
                    <td>@Model.Profiles[i].MealAuthor</td>
                    <td>
                        @Html.ActionLink("Detail", "ProfileDetail", new { id = Model.Profiles[i].ProfileId })
                        | @Html.ActionLink("Edit", "ProfileEdit", new { id = Model.Profiles[i].ProfileId })
                        | <a data-toggle="modal" href="@("#deleteProfileModal" + i)">Delete</a>
                        <div class="modal fade" id="@("deleteProfileModal" + i)" tabindex="-1" role="dialog">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    @using (Html.BeginForm("DeleteProfile", "Profile"))
                                    {
                                        <input type="hidden" value="@Model.Profiles[i].ProfileId" name="ProfileId" />
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                                            <h4 class="modal-title">Delete @Model.Profiles[i].MealAuthor</h4>
                                        </div>
                                        <div class="modal-body">
                                            Are you sure you want to delete @Model.Profiles[i].MealAuthor?
                                        </div>
                                        <div class="modal-footer">
                                            <button type="submit" class="btn btn-primary">Yes</button>
                                            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>


